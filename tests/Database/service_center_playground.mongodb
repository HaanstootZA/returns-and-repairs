// MongoDB Playground
// To disable this template go to Settings | MongoDB | Use Default Template For Playground.
// Make sure you are connected to enable completions and to be able to run a playground.
// Use Ctrl+Space inside a snippet or a string literal to trigger completions.

// Select the database to use.
use('service_center_playground');

// The drop() command destroys all data from a collection.
// Make sure you run it against the correct database and collection.
db.repairnotes.drop();

// Insert a few documents into the sales collection.
db.repairnotes.insertMany([
  { 'id': 'RNT001', 'capturer': 'Charles Xavier', 'lines': [{ 'partNumber': 'XMNWOLV', 'quantity': 9 }, { 'partNumber': 'XMNGMBT', 'quantity': 7 }]},
  { 'id': 'RNT002', 'capturer': 'Albert Spangler', 'lines': [{ 'partNumber': 'XMNSTRM', 'quantity': 2 }] },
  { 'id': 'RNT003', 'capturer': 'Wolverine', 'lines': [{ 'partNumber': 'XMNPHNX', 'quantity': 200 }] },
  { 'id': 'RNT004', 'capturer': 'Neo', 'lines': [{ 'partNumber': 'XMNGMBT', 'quantity': 7 }] }
]);

db.repairnotes.find({ id: { $eq: 'RNT001' } });

// Create a new index in the collection.
db.repairnotes.createIndex (
    {
      id: 'text'
    }, {
       unique: true
    }
);
// Run an aggregation to view total sales for each product in 2014.
// const aggregation = [
//   { $match: { date: { $gte: new Date('2014-01-01'), $lt: new Date('2015-01-01') } } },
//   { $group: { _id: '$item', totalSaleAmount: { $sum: { $multiply: [ '$price', '$quantity' ] } } } }
// ];
//db.sales.aggregate(aggregation);
